import osmnx as ox
from IPython.display import Image
import time
from shapely.geometry import mapping, shape
from shapely.geometry import box as shBox
import fiona
import numpy as np
import rasterio
import pandas as pd
import geopandas as gpd
import geopandas
import gdal
import ogr
from sys import getsizeof
import os
import subprocess




#To extract data from OSM (modified from )

%matplotlib inline
ox.config(log_console=True)
ox.__version__

# configure the inline image display
img_folder = "images"
extension = "png"
size = 240

# specify that we're retrieving building footprint geometries
tags = {"building": True}



#Enter in Place of Interest. Use OSM website to find the names of locations available by browsing their webmap.
gdf = ox.geometries_from_place("Hatteras Island, North Carolina, USA", tags)
gdf_proj = ox.project_gdf(gdf)
fp = f"./{img_folder}/HatterasIsland_bldgs.{extension}"
fig, ax = ox.plot_footprints(gdf_proj, filepath=fp, dpi=400, save=True, show=False, close=True)
Image(fp, height=size, width=size)




# save as a shapefile to your folder. Can save as gpkg .shp or .geojson. For easiest conversion later use .shp
gdf_save = gdf.applymap(lambda x: str(x) if isinstance(x, list) else x)
gdf_save.drop(labels="nodes", axis=1).to_file("/home/will/Desktop/Projects/USGS/Data/RawData/Polygons/OSM/HatterasIsland_bldgs.shp", driver="GPKG")



# calculate the area in projected units (meters) of each building footprint, then display first five
areas = gdf_proj.area
areas.head()


# total area (sq m) covered by building footprints
sum(areas)

# get the total area within Hatteras Island's admin boundary in sq meters
place = ox.geocode_to_gdf("Hatteras Island, North Carolina, USA")
place_proj = ox.project_gdf(place)
place_proj.area.iloc[0]



# what proportion of Hatteras Island is covered by building footprints?
sum(areas) / place_proj.area.iloc[0]

